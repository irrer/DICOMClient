<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <!-- Copyright 2015 Regents of the University of Michigan Licensed under 
        the Apache License, Version 2.0 (the "License"); you may not use this file 
        except in compliance with the License. You may obtain a copy of the License 
        at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable 
        law or agreed to in writing, software distributed under the License is distributed 
        on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either 
        express or implied. See the License for the specific language governing permissions 
        and limitations under the License. -->

    <!-- Use 'mvn package' from the command line to build everything. From Eclipse 
        you can use: right click on pom.xml click Run As ... click Maven assembly:assembly 
        Note that the order that the plugins appear in this file is important, because 
        multiple plugins are associated with the same phase, but the output of one 
        plugin is used as input for the subsequent plugin. author Jim Irrer irrer@umich.edu -->

    <modelVersion>4.0.0</modelVersion>
    <groupId>edu.umro.DICOM</groupId>
    <artifactId>dicomclient</artifactId>
    <version>1.0.56</version>
    <packaging>jar</packaging>
    <name>${project.artifactId}</name>
    <properties>
        <resource.dir>src/main/resources</resource.dir>
        <release>1</release>
    </properties>

    <dependencies>
        <dependency> <groupId>pixelmed</groupId>        <artifactId>pixelmed</artifactId>                   <version>20160530</version>                  </dependency>
        <dependency> <groupId>edu.umro</groupId>        <artifactId>util</artifactId>                       <version>1.3.11</version>                    </dependency>
        <dependency> <groupId>junit</groupId>           <artifactId>junit</artifactId>                      <version>4.8.2</version> <scope>test</scope> </dependency>
    </dependencies>
    <!--
        <dependency> <groupId>pixelmed</groupId>        <artifactId>pixelmed</artifactId>                   <version>20150428</version>                  </dependency> 
        <dependency> <groupId>pixelmed</groupId>        <artifactId>pixelmed</artifactId>                   <version>20151119</version>                  </dependency>
        <dependency> <groupId>pixelmed</groupId>        <artifactId>pixelmed</artifactId>                   <version>20170406</version>                  </dependency>
     -->
    <dependencyManagement>
        <dependencies>
        </dependencies>
    </dependencyManagement>
    <modules>
    </modules>
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>

            </plugin>

            <plugin>  <!-- source jar -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.1.2</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>compiler:compile</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>  <!-- build install package -->
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.6</version>
                <!-- Copy the package files into the build repository. -->
                <executions>

                    <execution>
                        <id>generate-the-docs</id>
                        <phase>package</phase>
                        <configuration>
                            <tasks>
                                <echo>Hello from generate.docs</echo>
                                
                                <property name="doc.version"     value="1.0.53" />
                                <property name="doc.dir"         value="docs/user_manual/user_manual_${doc.version}" />
                                <property name="doc.dest.dir"    value="${doc.dir}/output" />
                                <property name="code.version"    value="${version}" />
                                
                                <ant antfile="${doc.dir}/build.xml"/>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    
                    <execution>
                        <id>generate-manifest-with-timestamp</id>
                        <phase>package</phase>
                        <configuration>
                            <tasks>
                                <echo>Hello from generate-manifest-with-timestamp : ${TIMESTAMP}</echo>
                                <delete file="target/MANIFEST.MF" />
                                <copy file="MANIFEST.MF" tofile="target/MANIFEST.MF" />
                                <tstamp>
                                    <format property="TIMESTAMP" pattern="yyyy-MMM-dd hh:mm:ss aa"
                                        locale="en,US" />
                                </tstamp>
                                <replace file="target/MANIFEST.MF">
                                    <replacefilter token="@@BUILD_DATE@@" value="${TIMESTAMP}" />
                                    <replacefilter token="@@BUILDER@@" value="${user.name}" />
                                    <replacefilter token="@@VERSION@@" value="${project.version}" />
                                </replace>
                                <jar update="true"
                                    destfile="target/${project.artifactId}-${project.version}-jar-with-dependencies.jar"
                                    manifest="target/MANIFEST.MF" />
                                <jar update="true"
                                    destfile="target/${project.artifactId}-${project.version}-jar-with-dependencies.jar"
                                    includes="target/MANIFEST.MF" />
                                <delete file="target/MANIFEST.MF" />
                                <echo>Bye from generate-manifest-with-timestamp: ${TIMESTAMP}</echo>
                                <!-- </tasks> </configuration> <goals> <goal>run</goal> </goals> 
                                    </execution> <execution> <phase>package</phase> <configuration> <tasks> -->
                                <echo>maven-antrun-plugin build install package</echo>
                                <property name="project.dir"
                                    value="Z:\Projects\Dicom\dicomclient\BuildRepository\${project.artifactId}-${project.version}" />
                                <property name="dest.dir"
                                    value="${project.dir}\${project.artifactId}-${project.version}" />
                                <echo>dest.dir is: ${dest.dir}</echo>
                                <echo>version is: ${project.version}</echo>
                                <echo>artifactId is: ${project.artifactId}</echo>

                                <delete dir="${project.dir}" />
                                <mkdir dir="${project.dir}" />
                                <mkdir dir="${dest.dir}" />
                                <copy
                                    file="target/${project.artifactId}-${project.version}-jar-with-dependencies.jar"
                                    toDir="${dest.dir}" />
                                    
                                <copy file="${resource.dir}/DicomClientConfig.xml" toDir="${dest.dir}" />
                                <copy file="${resource.dir}/DicomClientConfigMil.xml" toDir="${dest.dir}" />
                                <copy file="${resource.dir}/DicomClientConfigMROQC.xml" toDir="${dest.dir}" />
                                <copy file="${resource.dir}/PACSConfig.xml" toDir="${dest.dir}" />
                                
                                <copy file="${resource.dir}/logging.propertiesWindows"
                                    toDir="${dest.dir}" />
                                <copy file="${resource.dir}/logging.propertiesLinux" toDir="${dest.dir}" />
                                
                                <copy file="${resource.dir}/DICOMClient.bat" toDir="${dest.dir}" />
                                <replace file="${dest.dir}/DICOMClient.bat" token="@@with-dep-jar@@" value="${project.artifactId}-${project.version}-jar-with-dependencies.jar" />
                                
                                <copy file="${resource.dir}/DICOM+.bat" toDir="${dest.dir}" />
                                <replace file="${dest.dir}/DICOM+.bat" token="@@with-dep-jar@@" value="${project.artifactId}-${project.version}-jar-with-dependencies.jar" />
                                
                                <copy file="${resource.dir}/DICOM+MIL.bat" toDir="${dest.dir}" />
                                <replace file="${dest.dir}/DICOM+MIL.bat" token="@@with-dep-jar@@" value="${project.artifactId}-${project.version}-jar-with-dependencies.jar" />
                                
                                <copy file="${resource.dir}/DICOM+.sh" toDir="${dest.dir}" />
                                <replace file="${dest.dir}/DICOM+.sh" token="@@with-dep-jar@@"
                                
                                    value="${project.artifactId}-${project.version}-jar-with-dependencies.jar" />
                                <property name="standard.zip.dest"
                                    value="${project.dir}/${project.artifactId}-${project.version}_Install.zip" />
                                    
                                <!-- zip standard package -->
                                <echo>Gonna zip ${dest.dir} ==>  prebuilt_packages/${project.artifactId}-${project.version}_Install.zip</echo>
                                
                                <property name="zip.file" value="prebuilt_packages/${project.artifactId}-${project.version}_Install.zip" />
                                <zip basedir="${dest.dir}" destfile="${zip.file}" />
                                <copy file="${zip.file}" toDir="${project.dir}" />
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                </executions>
            </plugin>

        </plugins>
    </build>
    <repositories>
    </repositories>
    <!-- 
    <distributionManagement>
        <repository>
            <id>releases</id>
            <name>Internal Releases</name>
            <url>http://141.214.124.203:8081/nexus/content/repositories/releases</url>
        </repository>
        <snapshotRepository>
            <id>snapshots</id>
            <name>Internal Releases</name>
            <url>http://141.214.124.203:8081/nexus/content/repositories/snapshots</url>
        </snapshotRepository>
    </distributionManagement>
    -->
</project>
